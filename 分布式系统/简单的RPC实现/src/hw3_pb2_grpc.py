# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import hw3_pb2 as hw3__pb2


class HW3Stub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SayHello = channel.unary_unary(
        '/HW3/SayHello',
        request_serializer=hw3__pb2.HelloRequest.SerializeToString,
        response_deserializer=hw3__pb2.HelloReply.FromString,
        )
    self.RpcMultiplication = channel.unary_unary(
        '/HW3/RpcMultiplication',
        request_serializer=hw3__pb2.Multiplication_input.SerializeToString,
        response_deserializer=hw3__pb2.Multiplication_output.FromString,
        )
    self.RpcSquare = channel.unary_unary(
        '/HW3/RpcSquare',
        request_serializer=hw3__pb2.Square_data.SerializeToString,
        response_deserializer=hw3__pb2.Square_data.FromString,
        )
    self.RpcKmeans = channel.unary_unary(
        '/HW3/RpcKmeans',
        request_serializer=hw3__pb2.Args.SerializeToString,
        response_deserializer=hw3__pb2.Color.FromString,
        )


class HW3Servicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SayHello(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RpcMultiplication(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RpcSquare(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RpcKmeans(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_HW3Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SayHello': grpc.unary_unary_rpc_method_handler(
          servicer.SayHello,
          request_deserializer=hw3__pb2.HelloRequest.FromString,
          response_serializer=hw3__pb2.HelloReply.SerializeToString,
      ),
      'RpcMultiplication': grpc.unary_unary_rpc_method_handler(
          servicer.RpcMultiplication,
          request_deserializer=hw3__pb2.Multiplication_input.FromString,
          response_serializer=hw3__pb2.Multiplication_output.SerializeToString,
      ),
      'RpcSquare': grpc.unary_unary_rpc_method_handler(
          servicer.RpcSquare,
          request_deserializer=hw3__pb2.Square_data.FromString,
          response_serializer=hw3__pb2.Square_data.SerializeToString,
      ),
      'RpcKmeans': grpc.unary_unary_rpc_method_handler(
          servicer.RpcKmeans,
          request_deserializer=hw3__pb2.Args.FromString,
          response_serializer=hw3__pb2.Color.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'HW3', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
